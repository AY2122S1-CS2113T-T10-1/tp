@startuml AddSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":List*Command" as list COLOR_COMMAND
    participant "<<class>>\nCommandSyntax" as commandSyntax COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant "<<class>>\nUi" as ui COLOR_UTILITIES
    participant "<<class>>\n *Validator" as validator COLOR_UTILITIES
    participant ":*Comparator" as comparator COLOR_UTILITIES
end box

box Inventory COLOR_INVENTORY_BOX
    participant "<<class>>\nMedicine" as medicine COLOR_INVENTORY
    participant ":*" as object COLOR_INVENTORY
end box

autoactivate on

-> list: execute()
list -> ui : getInstance()
list <-- ui
list -> commandSyntax : containsInvalidParameters()
list <-- commandSyntax : isInvalidParameter

opt !isInvalidParameter
    list -> medicine : getInstance()
    list <-- medicine
    list -> validator : containsInvalidParameterValues()
    list <-- validator : isInvalidParameterValues

    opt !isInvalidParameterValues
        list -> list : filter*()

        loop parameter : parameters.keySet()

            alt parameters.equals(SORT)
                create comparator
                list -> comparator : new *Comparator()
                list <-- comparator : sorted*
                deactivate comparator
            else parameters.equals(REVERSED_SORT)
                create comparator
                list -> comparator : new *Comparator()
                list <-- comparator : reverseSorted*
                deactivate comparator
            else default
                loop until end of all * objects
                    list -> object : getAttributeValue()
                    list <-- object
                end

            end

        end

        list --> list : filtered*

        list -> ui : print*()
        deactivate ui
    end

end


@enduml