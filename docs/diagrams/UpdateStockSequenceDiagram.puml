@startuml UpdateStockSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":UpdateStock" as updatestock COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant ":StockValidator" as stockvalidator COLOR_UTILITIES
    participant "<<class>>\n:StockManager" as stockmanager COLOR_UTILITIES
    participant "<<class>>\n:Storage" as storage COLOR_UTILITIES
end box

autoactivate on

-> updatestock: execute()
    create stockvalidator
    updatestock -> stockvalidator: new StockValidator()
    updatestock <-- stockvalidator

    updatestock -> stockmanager: extractStockObject()
    updatestock <-- stockmanager: stock

    updatestock -> updatestock: processQuantityValues()
    updatestock --> updatestock: isValidQuantityValues

    updatestock -> updatestock: processDateInput()
    updatestock --> updatestock: isValidExpDate

    note over updatestock
    MediVault does additional validity
    check for quantity and expiry date
    besides being parsable.
    end note

    opt isValidQuantityValues && isValidExpDate
        updatestock -> stockmanager: getFilteredStocksByName()
        updatestock <-- stockmanager: oldFilteredStocks
        opt parameters contains name
            updatestock -> updatestock: addNewRowForUpdate()
            deactivate updatestock
            updatestock -> updatestock: getNewStock()
            deactivate updatestock
        end
        updatestock -> stockmanager: getFilteredStocksByName()
        updatestock <-- stockmanager: filteredStocks
        updatestock -> updatestock: setUpdatesByStockId(stock)
        deactivate updatestock
        updatestock -> storage: getInstance()
        updatestock <-- storage
        updatestock -> storage: saveData()
        updatestock <-- storage
        deactivate storage
    end

@enduml