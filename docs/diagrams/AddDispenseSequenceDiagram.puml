@startuml UpdateStockSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":AddDispense" as adddispense COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant ":CommandSyntax" as commandsyntax COLOR_UTILITIES
    participant ":DispenseValidator" as dispensevalidator COLOR_UTILITIES
    participant ":StockManager" as stockmanager COLOR_UTILITIES
    participant ":StockComparator" as stockcomparator COLOR_UTILITIES
    participant ":Ui" as ui COLOR_UTILITIES
end box

box Inventory COLOR_INVENTORY_BOX
    participant ":Medicine" as medicine COLOR_INVENTORY
end box

autoactivate on
-> adddispense: execute()
adddispense -> ui: getInstance()
adddispense <-- ui
adddispense -> medicine : getInstance()
adddispense <-- medicine
opt    !isInvalidParameters
adddispense -> commandsyntax : containsInvalidParameters()
adddispense <-- commandsyntax : isInvalidParameter

    opt !isInvalidParametersValue
    adddispense -> dispensevalidator : containsInvalidParameterValues()
    adddispense <-- dispensevalidator : isInvalidParameterValues

    adddispense -> stockmanager: getTotalStockQuantity()
    adddispense <-- stockmanager: totalStock

    create stockcomparator
    adddispense -> stockcomparator : new StockComparator()
    adddispense <-- stockcomparator : sortedStock
    deactivate stockcomparator

        opt existingQuantity == quantityToDispense
            adddispense -> adddispense : dispense()
            adddispense --> adddispense
'

            opt existingQuantity > quantityToDispense
            adddispense -> adddispense : dispense()
            adddispense --> adddispense
                opt existingQuantity < quantityToDispense
                    adddispense -> adddispense : dispense()
                    adddispense --> adddispense
                end
            end
        end
    end
end
@enduml