@startuml
'https://plantuml.com/class-diagram

!include style.puml

' hide the circles in the diagram
hide circle
' hide the icons for access modifiers
skinparam classAttributeIconSize 0
' to join all the arrows
'skinparam groupInheritance 3
skinparam classBackgroundColor COLOR_COMMAND_BOX

package "Command Component" <<Rectangle>> {
    class "{abstract}\nCommand" as Command
    class AddDispenseCommand
    class AddStockCommand
    class AddOrderCommand
    class ArchiveDispenseCommand
    class ArchiveOrderCommand
    class DeleteDispenseCommand
    class DeleteStockCommand
    class DeleteOrderCommand
    class ExitCommand
    class HelpCommand
    class ListDispenseCommand
    class ListStockCommand
    class ListOrderCommand
    class PurgeCommand
    class ReceiveOrderCommand
    class UpdateDispenseCommand
    class UpdateStockCommand
    class UpdateOrderCommand

}

package MediVault <<Rectangle>> COLOR_MEDIVAULT_BOX {
}

package Inventory <<Rectangle>> COLOR_INVENTORY_BOX {
}

class Command {
    #parameters: LinkedHashMap<String, String>
    +execute(): void{abstract}
}

class AddDispenseCommand {
    +AddDispenseCommand()
    +execute(): void
    -dispense(): void
}

class AddStockCommand {
    +AddStockCommand()
    +execute(): void
    -checkDateAndQuantity(): boolean
    -addMedicine(): void
}

class AddOrderCommand {
    +AddOrderCommand()
    +execute(): void
    -addOrder(): void
}

class ArchiveDispenseCommand {
    +ArchiveDispenseCommand()
    +execute(): void
}

class ArchiveOrderCommand {
    +ArchiveOrderCommand()
    +execute(): void
}

class DeleteDispenseCommand {
    +DeleteDispenseCommand()
    +execute(): void
    -setStockQuantity(): boolean
}

class DeleteStockCommand {
    +DeleteStockCommand()
    +execute(): void
    -deleteStockById(): void
    -deleteStockByExpiry(): void
}

class DeleteOrderCommand {
    +DeleteOrderCommand()
    +execute(): void
}

class ExitCommand {
    +execute(): void
}

class HelpCommand {
    +execute(): void
}

class ListDispenseCommand {
    +ListDispenseCommand()
    +execute(): void
    -filterDispenses(): ArrayList<Dispense>
}

class ListStockCommand {
    +ListStockCommand()
    +execute(): void
}

class ListOrderCommand {
    +ListOrderCommand()
    +execute(): void
    -filterOrders(): ArrayList<Order>
}

class PurgeCommand {
    +execute(): void
}

class ReceiveOrderCommand {
    +ReceiveOrderCommand()
    +execute(): void
}

class UpdateDispenseCommand {
    +UpdateDispenseCommand()
    +execute(): void
    -processGivenNameAndQuantity(): boolean
    -processGivenName(): boolean
    -processGivenQuantity(): boolean
    -processOtherFields(): boolean
}

class UpdateOrderCommand {
    +UpdateOrderCommand()
    +execute(): void
    -setUpdatesByOrderId(): void
}

class UpdateStockCommand {
    +UpdateStockCommand()
    +execute(): void
    -getNewStock(): Stock
    -addNewRowForUpdates(): void
    -processDateInput(): boolean
    -processQuantityValues(): boolean
    -setUpdatesByStockId(): void
}

AddDispenseCommand ----|> Command
AddStockCommand ----|> Command
AddOrderCommand ----|> Command
DeleteDispenseCommand ---|> Command
DeleteStockCommand ---|> Command
DeleteOrderCommand ---|> Command
ExitCommand --|> Command
HelpCommand --|> Command
PurgeCommand --|> Command
ListDispenseCommand --up|> Command
ListStockCommand --up|> Command
ListOrderCommand --up|> Command
ReceiveOrderCommand ---up|> Command
ArchiveDispenseCommand ---up|> Command
ArchiveOrderCommand ---up|> Command
UpdateOrderCommand ----up|> Command
UpdateDispenseCommand ----up|> Command
UpdateStockCommand ----up|> Command

MediVault ---.right|> Command: executes >
Command ---.right|> Inventory: affects >


@enduml