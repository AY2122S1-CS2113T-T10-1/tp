@startuml AddStockSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":AddStock" as addstock COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant "<<class>>\n:CommandSyntax" as commandsyntax COLOR_UTILITIES
    participant ":StockValidator" as stockvalidator COLOR_UTILITIES
    participant "<<class>>\n:StockManager" as stockmanager COLOR_UTILITIES
    participant "<<class>>\n:Ui" as ui COLOR_UTILITIES
    participant "<<class>>\n:Storage" as storage COLOR_UTILITIES
end box

box Inventory COLOR_INVENTORY_BOX
    participant "<<class>>\n:Medicine" as medicine COLOR_INVENTORY
end box

autoactivate on

-> addstock: execute()
    addstock -> ui: getInstance()
    addstock <-- ui
    addstock -> medicine : getInstance()
    addstock <-- medicine



        addstock -> addstock : checkValidParametersAndValues()
        opt !isInvalidParameter
            addstock -> commandsyntax : containsInvalidParameters()
            addstock <-- commandsyntax : isInvalidParameter
            opt !isInvalidParameterValues
                addstock -> stockvalidator : containsInvalidParameterValues()
                addstock <-- stockvalidator : isInvalidParameterValues

                end
            end
            addstock --> addstock : isCheckValidParametersAndValues
            alt nameExist
                addstock -> stockmanager: getTotalStockQuantity()
                addstock <-- stockmanager: totalStock


                addstock -> addstock : checkDateAndQuantity()
                    opt isValidDate
                        addstock -> stockvalidator : dateValidityChecker()
                        addstock <-- stockvalidator : isValidDate
                        opt isValidQuantity
                            addstock -> stockvalidator : quantityValidityChecker()
                            addstock <-- stockvalidator : isValidQuantity

                        end
                    end
                    addstock --> addstock : isCheckDateAndQuantity



    else !nameExist
        addstock -> addstock : checkValidParametersAndValues()
        opt !isInvalidParameter
            addstock -> commandsyntax : containsInvalidParameters()
            addstock <-- commandsyntax : isInvalidParameter
            opt !isInvalidParameterValues
            addstock -> stockvalidator : containsInvalidParameterValues()
            addstock <-- stockvalidator : isInvalidParameterValues
            end
        end
        addstock --> addstock : isCheckValidParametersAndValues

    end
    addstock -> storage: getInstance()
    addstock <-- storage
    addstock -> storage: saveData()
    deactivate storage
    deactivate addstock




@enduml