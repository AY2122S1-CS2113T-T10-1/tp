@startuml AddStockSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":AddStockCommand" as addstock COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant ":StockValidator" as stockvalidator COLOR_UTILITIES
    participant "<<class>>\n:StockManager" as stockmanager COLOR_UTILITIES
end box

box Inventory COLOR_INVENTORY_BOX
    participant ":Stock" as stock COLOR_INVENTORY
end box

autoactivate on
mainFrame sd Logic for AddStockCommand
activate addstock
addstock -> addstock : checkExpiryDate()
addstock --> addstock : formatExpiryDate
alt nameExist
    addstock -> stockmanager: getTotalStockQuantity()
    addstock <-- stockmanager: totalStock
    addstock -> addstock : isExpiryExist()
    loop stock : filteredStocks
        opt isValidQuantity
            addstock -> addstock : isValidQuantity()
            addstock -> stockvalidator : quantityValidityChecker()
            addstock <-- stockvalidator : isValidQuantity
            addstock --> addstock : isValidQuantity
            opt formatExpiry.equals(stock.getExpiry())
                addstock -> stock : getQuantity()
                addstock <-- stock : getQuantity
                addstock -> stock : setQuantity()
                addstock <-- stock :
            end
        end
    end
    addstock --> addstock : isExpiryExist
    addstock -> addstock : addSameMedicine()
    loop stock : filteredStocks
        opt isValidQuantity
        addstock -> addstock : isValidQuantity()
        addstock -> stockvalidator : quantityValidityChecker()
        addstock <-- stockvalidator : isValidQuantity
        addstock --> addstock : isValidQuantity
        addstock -> addstock : addMedicine()
        addstock --> addstock : addMedicine
        end
        addstock --> addstock : addSameMedicine
    end

else !nameExist
    addstock -> addstock : isValidQuantity()
    addstock -> stockvalidator : quantityValidityChecker()
    addstock <-- stockvalidator : isValidQuantity
    addstock --> addstock : isValidQuantity
    opt isValidQuantity
        addstock -> addstock : addMedicine()
        addstock --> addstock : addMedicine
    end
end


deactivate addstock




@enduml
