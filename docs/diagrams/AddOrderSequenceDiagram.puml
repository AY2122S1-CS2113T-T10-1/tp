@startuml AddOrderSequenceDiagram
'https://plantuml.com/sequence-diagram

!include style.puml

box Command COLOR_COMMAND_BOX
    participant ":AddOrderCommand" as addorder COLOR_COMMAND
end box

box Utilities COLOR_UTILITIES_BOX
    participant ":OrderManager" as ordermanager COLOR_UTILITIES
    participant ":StockManager" as stockmanager COLOR_UTILITIES
end box

autoactivate on
mainFrame sd Logic for AddOrderCommand
activate addorder
alt orderQuantity != 0
    alt nameExistsInorder
        alt !nameExistsInStock
               alt orderQuantity < maxQuantity
                   addorder -> addorder : addDate(dateToAdd)
                   addorder --> addorder
                   addorder -> addorder : addOrder(ui: Ui, medicines: ArrayList<Medicine>, name: String, \nquantity: int, date: Date)
                   addorder --> addorder
               end
           else nameExistsInStock
               addorder -> ordermanager : getTotalOrderQuantity()
               addorder <-- ordermanager : TotalOrderQuantity
               addorder -> stockmanager : getTotalStockQuantity()
               addorder <-- stockmanager : TotalStockQuantity
               addorder -> stockmanager : getMaxStockQuantity()
               addorder <-- stockmanager : MaxStockQuantity
               alt orderQuantity + totalExistingQuantity <= maxQuantity
                   addorder -> addorder : addDate(dateToAdd)
                   addorder --> addorder
                   addorder -> addorder : addOrder(ui: Ui, medicines: ArrayList<Medicine>, name: String, \nquantity: int, date: Date)
                   addorder --> addorder
               end
           end
    else !nameExistsInorder
        alt !nameExistsInStock
            addorder -> addorder : addDate(dateToAdd)
            addorder --> addorder
            addorder -> addorder : addOrder(ui: Ui, medicines: ArrayList<Medicine>, name: String, \nquantity: int, date: Date)
            addorder --> addorder
        else nameExistsInStock
            addorder -> stockmanager : getTotalStockQuantity()
            addorder <-- stockmanager : TotalStockQuantity
            addorder -> stockmanager : getMaxStockQuantity()
            addorder <-- stockmanager : MaxStockQuantity
            alt orderQuantity + existingStockQuantity <= maxQuantity
                addorder -> addorder : addDate(dateToAdd)
                addorder --> addorder
                addorder -> addorder : addOrder(ui: Ui, medicines: ArrayList<Medicine>, name: String, \nquantity: int, date: Date)
                addorder --> addorder
            end
        end
    end
end
deactivate addorder
@enduml